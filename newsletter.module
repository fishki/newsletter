<?php
// $Id:$
function pre($txt) {
  echo '<pre>';
  print_r($txt);
  echo '</pre>';
}
function newsletter_perm() {
    return array(
        'admin newsletter', 
        'create newsletter', 
        'edit own newsletter', 
        'edit any newsletter', 
        'delete own newsletter', 
        'delete any newsletter'
      );
}
function newsletter_theme() {
  return array(
    'newsletter_list_search_form' => array(
      'arguments' => array('elements' => NULL),
      'file' => 'newsletter.admin.inc',
      'render element' => 'search',
    ),
  );
}
function newsletter_menu() {
    $items['newsletter'] = array(
        'title' => t('Manage campaings'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array('newsletter_list_form'),
        'file' => 'newsletter.admin.inc',
    );
    $items['newsletter/manage'] = array(
        'title' => t('Newsletters'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 1,
    );
    $items['newsletter/manage/list'] = array(
        'title' => t('List'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 1,
    );
    $items['newsletter/manage/add'] = array(
        'title' => t('Add newsletter'),
        'page callback' => 'node_add',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array('newsletter'),
        'file' => 'node.pages.inc',
        'file path' => drupal_get_path('module', 'node'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 2,
    );
    $items['newsletter/users'] = array(
        'title' => t('Users'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array('newsletter_list_user_form'),
        'file' => 'newsletter.admin.inc',
        'type' => MENU_LOCAL_TASK,
        'weight' => 2,
    );
    $items['newsletter/users/list'] = array(
        'title' => t('List'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 1,
    );
    $items['newsletter/users/add'] = array(
        'title' => t('Add'),
        'page callback' => 'node_add',
        'access arguments' => array('admin newsletter'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 2,
    );
    $items['newsletter/manage/edit/%node'] = array(
        'title' => t('Edit newsletter'),
        'page callback' => 'node_page_edit',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array(3),
        'file' => 'node.pages.inc',
        'file path' => drupal_get_path('module', 'node'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 3,
    );
    $items['newsletter/template/%'] = array(
        'page callback' => 'newsletter_rpeview',
        'page arguments' => array(2),
        'access callback' => TRUE,
        'file' => 'newsletter.admin.inc',
        'type' => MENU_CALLBACK,
    );
    $items['newsletter/users/%user/subscribe'] = array(
        'title' => t('Subscribe'),
        'page callback' => 'newsletter_user_subscribe',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array(2),
        'file' => 'newsletter.admin.inc',
        'type' => MENU_LOCAL_TASK,
        'weight' => 4,
     );
    $items['confirm_subscription/%'] = array(
        'title' => t('Subscribe confirmation'),
        'page callback' => 'newsletter_user_subscribe_confirmation',
        'access callback' => 'user_access',
        'access arguments' => array('admin newsletter'),
        'page arguments' => array(1),
        'file' => 'newsletter.admin.inc',
        'type' => MENU_CALLBACK,
        'weight' => 2,
     );

    return $items;
}

function newsletter_node_info() {
    return array(
        'newsletter' => array(
            'name' => t('Newsletter'),
            'base' => 'newsletter',
            'description' => t('Newsletter module'),
            //'has_title' => TRUE,
            //'title_label' => t('Title'),
            //'help' => t('Enter the job title, job description, and the name of the company that posted the job'),
            //'has_body' => TRUE,
            //'body_label' => t('Body'),
            //'locked' => TRUE
        ),
    );
}

function newsletter_access($op, $node, $account) {
    $is_author = $account->uid == $node->uid;
    switch ($op) {
        case 'create':
            return user_access('create newsletter', $account);
        case 'update':
            return user_access('edit own newsletter', $account) && $is_author || user_access('edit any newsletter', $account);
        case 'delete':
            return user_access('delete own newsletter', $account) && $is_author || user_access('delete any newsletter', $account);
    }
}

function newsletter_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

function newsletter_form_alter(&$form, &$form_state, $form_id) {
    if($form_id == 'newsletter_node_form') {
        $form['buttons']['preview']['#access'] = FALSE;
        $form['buttons']['delete']['#access'] = FALSE;
        $form['comment_settings']['comment']['#default_value'] = 0;
        $form['options']['promote']['#default_value'] = 0;
        $form['comment_settings']['#access'] = FALSE;
        $form['options']['#access'] = FALSE;
        $form['author']['#access'] = FALSE;
        $form['revision_information']['#access'] = FALSE;
        $form['menu']['#access'] = FALSE;
        $form['path']['#access'] = FALSE;
        $form['#redirect'] = 'newsletter';
    }
}

function newsletter_preprocess_page(&$vars) {
  //pre($vars);die;
    if(in_array('page__newsletter__template', $vars['theme_hook_suggestions'])) {
        global $base_url;
        $vars['file_root'] = $base_url . base_path() . drupal_get_path('module', 'newsletter') . '/files';
        $node = node_load($vars['node']);
        //pre($node);die;
        $vars['newsletter_title'] = $node->title;
        $vars['newsletter_body'] = $node->body[und][0]['value'];
        //pre($vars);die;
    }
}



////////////////////////////////////////////////////////////////////////////////////////
////GOOOOO
//
///////////////////////////////////////////////////////////////////////////////////////


function newsletter_user_mail_text($key, $language = NULL, $variables = array()) {
/*
  pre($variables);die();
 Array
(
    [user] => stdClass Object
        (
            [approve_key] => 6d4ad12d59595f48264f3948ae464216
            [name] => user1
            [mail] => user1@localhost.my
        )

)
*/

	$langcode = isset($language) ? $language->language : NULL;
        $admin_setting = variable_get('user_mail_'. $key, FALSE);
	if ($admin_setting) {
            return strtr($admin_setting, $variables); //t()
	}
	else {
		switch ($key) {
			case 'newsletter_approve_notification_subject':
				//return t('Notification title', $variables, $langcode);
     return token_replace('Notification title', $variables, array('language' => $language, 'callback' => 'newsletter_user_mail_tokens', 'sanitize' => FALSE));
			case 'newsletter_approve_notification_body':
				//return t('Notification body !approve_link', $variables, $langcode);
     $x = token_replace('Notification body !approve_link', $variables, array('language' => $language, 'callback' => 'newsletter_user_mail_tokens', 'sanitize' => FALSE));
     return $x;
		}
	}
}

function newsletter_user_mail_tokens(&$replacements, $data, $options) {
  //pre($data['user']->approve_key);die();
  if (isset($data['user'])) {
    $replacements['!approve_link'] = url('confirm_subscription/' . $data['user']->approve_key, array('absolute' => TRUE));
    //$replacements['!unsubscribe_link'] = url('unsubscribe/' . $data['user']->unsubscribe_key, array('absolute' => TRUE));
    //$replacements['!newsletter_web_link'] = url('newsletter/template/' . $data['user']->newsletter_id, array('absolute' => TRUE));
    
    //$replacements['[user:one-time-login-url]'] = user_pass_reset_url($data['user']);
    //$replacements['[user:cancel-url]'] = user_cancel_url($data['user']);
  }
}
/*
function newsletter_user_mail_tokens($account, $language) {
  
	$tokens = array(
            '!approve_link' => url('confirm_subscription/' . $account->approve_key, array('absolute' => TRUE, 'language' => $language)),
            '!unsubscribe_link' => url('unsubscribe/' . $account->unsubscribe_key, array('absolute' => TRUE, 'language' => $language)),
            '!newsletter_web_link' => url('newsletter/template/' . $account->newsletter_id, array('absolute' => TRUE, 'language' => $language)),
            
	);

        //$additional_tokens = user_mail_tokens($account, $language);
        //$tokens = $tokens + $additional_tokens;
	return $tokens;
}
*/

function newsletter_mail($key, &$message, $params) {
	$language = $message['language'];
	//$variables = newsletter_user_mail_tokens($params['account'], $language);
 $variables = array('user' => $params['account']);
 switch($params['mail_type']) {
		case 'notification':
			$message['subject'] .= newsletter_user_mail_text($key .'_subject', $language, $variables);
			$message['body'][] = newsletter_user_mail_text($key .'_body', $language, $variables);
   //pre($message);die();
			break;
		case 'mailing':
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
			$message['subject'] = $params['mailing_subject'];
			$message['body'][] = strtr($params['mailing_body'], $variables);
			break;
	}
}

function newsletter_user_mail_notify($op, $account, $language = NULL, $params = array(), $type = 'notification') {
	 $params['account'] = $account;
	 $params['mail_type'] = $type;
	 $language = $language ? $language : user_preferred_language($account);
	 $mail = drupal_mail('newsletter', $op, $account->mail, $language, $params);
	 return empty($mail) ? NULL : $mail['result'];
}